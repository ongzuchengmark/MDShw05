}
}
}
delay_ann()
delay_ann()
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann <- function(line_no = "0", delay_time = 0){
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (is.element(line_no, mta_lines)) {
cat("Attention please: Line", {line_no}, "is experiencing a", {delay_time}, "minutes delay. We are sorry for the inconvenience")
} else {
cat("There is no train delay")
}
}
}
delay_ann()
delay_ann <- function(line_no = "0", delay_time = 0){
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.num(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == "0") {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
}
} else (is.element(line_no, mta_lines)) {
cat("Attention please: Line", {line_no}, "is experiencing a", {delay_time}, "minutes delay. We are sorry for the inconvenience")
}
}
}
delay_ann <- function(line_no = "0", delay_time = 0){
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.num(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == "0") {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
}
} else (is.element(line_no, mta_lines)) {
cat("Attention please: Line", {line_no}, "is experiencing a", {delay_time}, "minutes delay. We are sorry for the inconvenience")
}
}
}
delay_ann <- function(line_no = "0", delay_time = 0){
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.num(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == "0") {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
}
} else (is.element(line_no, mta_lines)) {
cat("Attention please: Line", {line_no}, "is experiencing a", {delay_time}, "minutes delay. We are sorry for the inconvenience")
}
}
}
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(
)
delay_ann()
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann()
delay_ann(x, 1)
delay_ann(x, 1)
delay_ann(1, 1)
delay_ann(A, 1)
delay_ann("A", 1)
delay_ann(1, 1)
delay_ann(2, 1)
delay_ann(10, 1)
delay_ann(8, 1)
delay_ann(9, 1)
delay_ann(7, 1)
delay_ann(G, 1)
delay_ann("G", 1)
delay_ann("Y", 1)
delay_ann("Y", 0)
delay_ann("1", 0)
delay_ann("1", "a")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann("1", "a")
delay_ann("1", "0")
delay_ann("1", "0")
delay_ann("1", 0)
delay_ann(x , 0)
delay_ann("x" , 0)
delay_ann(G, 0)
delay_ann("G", 0)
delay_ann("G", 2)
delay_ann(0, 0)
delay_ann(c("1", "2"), 2)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann("1", 2)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 3)
install.packages(lubridate)
install.packages("lubridate")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
?Sys.time
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
Sys.time()
time <- ymd_hms(Sys.time())
time
time
time1 <- hm(time)
hm(time)
hour(time)
minute(time)
time <- Sys.time()
hour(time)
minute(time)
minute(time)
detach("package:lubridate", unload=TRUE)
minute(time)
hour(time)
time <- Sys.time()
hour(time)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
hour(time)
minute(time)
new_time <- time + minutes(5)
new_time
cat({hour(eta)}, ":", minute(eta))
eta <- Sys.time() + minutes(delay_time)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
eta <- Sys.time() + minutes(delay_time)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
cat({hour(new_time}, ":", minute(new_time))
cat({hour(new_time)}, ":", {minute(new_time)})
cat({hour(new_time)}, ":", {minute(new_time)}, sep = "")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 3)
delay_ann(1, 3)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 3)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
detach("package:lubridate", unload=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
detach("package:lubridate", unload=TRUE)
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
detach("package:tidyverse", unload=TRUE)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, "3.2")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 3)
delay_ann(1, "a")
delay_ann(1, "a")
delay_ann(1, 0.5)
delay_ann(1, 90)
eta
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line ", {line_no}, " is experiencing a delay of ", {delay_time}, " minute(s). ", "The estimated time of arrival is ", {hour(eta)}, ":", {minute(eta)}," HRS. We are sorry for the inconvenience.", sep = "")
}
}
}
eta
eta
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 90)
eta <- Sys.time() + minutes(delay_time)
eta <- Sys.time() + minutes(delay_time)
eta <- Sys.time() + minutes(90)
eta <- Sys.time() + minutes(90)
eta
minute(eta)
knitr::opts_chunk$set(echo = TRUE)
eta <- Sys.time() + minutes(delay_time)
eta <- Sys.time() + minutes(90)
eta
eta <- Sys.time(format = "%H:%M") + minutes(90)
eta <- Sys.time() + minutes(90)
eta(format = "%H:%M")
eta <- Sys.time() + minutes(90)
eta(format = "%H:%M")
format(eta, "%H:%M")
eta <- format(Sys.time() + minutes(90), "%H:%M")
eta
eta <- format(Sys.time() + minutes(20), "%H:%M")
eta
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 90)
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 90)
delay_ann(1, 900000)
detach("package:lubridate", unload=TRUE)
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 900000)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
if (is.element(line_no, mta_lines) == FALSE | is.integer(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, 900000)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(1, "90.55")
delay_ann(1, "x")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(0, "b")
delay_ann(0, 1)
delay_ann(0, 0)
cat("There is no train delay.")
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
delay_ann(0, 5)
delay_ann(5, 5)
devtools::(use_package("lubridate"))
devtools::use_package("lubridate")
devtools::document()
devtools::document()
library(roxygen2)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
source('~/Desktop/MDShw05/R/announcement.R', echo=TRUE)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
devtools::document()
devtools::document()
devtools::document()
??delay_ann
??announcement
??MDShw05
??MDShw05
??announcement
??delay_ann
?delay_ann
??delay_ann
?delay_an
?delay_ann
?delay_ann
check()
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
source('~/Desktop/MDShw05/R/delay_ann.R', echo=TRUE)
source('~/Desktop/MDShw05/R/delay_ann.R', echo=TRUE)
check()
delay_ann("C", 10)
delay_ann("1", 5)
devtools::use_readme_rmd()
check()
delay_ann()
delay_ann()
check()
check()
check()
?delay_ann
?delay_ann
check()
?delay_ann
?delay_ann
check()
check()
check()
?delay_ann
??delay_ann
?delay_ann
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
?delay_ann
??delay_ann
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
?delay_ann
?
delay_ann
View(delay_ann)
?delay_ann
??delay_ann
?delay_ann
??delay_ann
delay_ann()
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
?delay_ann
??delay_ann
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
??delay_ann
?delay_ann
?"delay_ann"
??"delay_ann"
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
delay_ann <- function(line_no = "0", delay_time = 0){
eta <- format(Sys.time() + minutes(delay_time), "%H:%M")
mta_lines <- c("0", "1", "2", "3", "4", "5", "6", "7", "A", "B", "C", "D", "E", "F", "G", "J", "L", "M", "N", "Q", "R", "S", "Z", "SIR")
if (is.element(line_no, mta_lines) == FALSE | is.numeric(delay_time) == FALSE) {
return("Please enter a valid MTA line and/or a numeric delay time. input line_no = 0 and delay_time = 0 if there is no delay")
} else {
if (line_no == "0") {
if (delay_time == 0) {
cat("There is no train delay.")
} else {
cat("Please enter a valid MTA line and/or a numeric delay time. Input line_no = 0 and delay_time = 0 if there is no delay")
}
} else {
if (delay_time == 0) {
cat("Please input a delay_time value > 0")
} else {
cat("Attention please: Line", {line_no}, "is experiencing a delay of", {delay_time}, "minute(s).", "The estimated time of arrival is", {eta},"HRS. We are sorry for the inconvenience.")
}
}
}
}
?delay_ann
??delay_ann
source('~/Desktop/MDShw05/R/delay_ann.R', echo=TRUE)
source('~/Desktop/MDShw05/R/delay_ann.R', echo=TRUE)
?delay_ann
?MDShw05
??MDShw05
??delay_ann
delay_ann(5,5)
?delay_ann
help(delay_ann)
?delay_ann
?delay_ann
?delay_ann
?delay_ann
?delay_ann
check()
check()
devtools::check()
library(MDShw05)
devtools::check()
library(MDShw05)
devtools::check()
